import React from 'react';

const Articles = () => {
    return (
        <div>
            <h3>How react works</h3>
            <p>আমরা সাধারণত ওয়েবসাইটে এইচটিএমএল, সিএসএস সহ জাভাস্ক্রিপ্ট ইউজ করি। এখন ব্রাউজার বিহ্যাইন্ড দ্যা সীনে একটা ডম ট্রি তৈরী করে যাতে ইউজার সেই ডমের সাথে ইন্টার‍্যাক্ট করতে পারে। ব্রাউজারের এই প্রসেসটাকে ক্রিটিক্যাল রেন্ডার পাথ বলে। এবং  রিঅ্যাক্ট একটা সেইম টু সেইম এই ব্রাউজারের ডমের মতো করে আরেকটা ডম তৈরী করে যেটাকে ভার্চুয়াল ডম বলা হয়। এখন এই ডম দেখতে পুরো সেই আসল ডমের মতোই, কিন্তু এই ভার্চুয়াল ডমটা আসলে একটা জাভাস্ক্রিপ্ট অবজেক্ট। রিঅ্যাক্ট এটাকে এমনভাবে তৈরী করে যে এই ডমের সাথে সহজেই জাভাস্ক্রিপ্ট ইউজ করে যেকোনো ইলিমেন্ট মডিফাই করা যায় কম সময়ের মধ্যে এবং এফিসিয়েন্টলি। 
                <br></br>
                এখানে রিঅ্যাক্ট আরেকটা কাজ করে। রিঅ্যাক্ট একটা না বরং দুইটা Virtual DOM তৈরী করে।  ইউজার যখন রিঅ্যাক্ট অ্যাপের মধ্যে কোনো অ্যাকশন নেয় বা আমরা যেটা বলি DOOM-এ কোনো চেঞ্জ আনার মতো কিছু করে তখন রিঅ্যাক্ট দুইটা Virtual DOOM-এর মধ্যে একটাতে সেই চেঞ্জগুলো রাখে, আর আরেকটা থাকে আগের ভার্শনের। এখন আগেরটার সাথে নতুনটার তুলনা করে React দেখে আসলে স্পেসেফিক ঠিক কোন ইলিমেন্ট পরিবর্তন করা হয়েছে। সে অনুসারে React পুরো DOOM-টাকে Re-Render বা Re-Paint না করে শুধুমাত্র যেই জিনিসটা চেঞ্জ হয়েছে সেটাকেই চেঞ্জ করে। এতে সহজেই দ্রুত কাজ হয়ে যায় আর অতিরিক্ত, অপ্রয়োজনীয় কোনো কাজও করতে হয় না ব্রাউজারের। আর এভাবেই, এই টেকনিক ইউজ করে React এতো ফাস্ট Render করতে পারে।
            </p>

            <h3>Props এবং State এর মধ্যে পার্থক্য</h3>
            <p>#useState</p>
            <p>useState হচ্ছে একটি ফাংশন যেটি একটি initial value গ্রহন করে। এবং এটি এমন একটি ডাটা অথবা ভেলু যেটা চেঞ্জ হয় সময়ের সাথে। মূলত এই ফাংশনটি আমাদেরকে ২টি value রিটার্ন করে  এবং এই ২টির মধ্যে একটি হলো value অন্যটি হলো array টাইপ হয়ে আসে যেটির ভিতরে ২টি এলিমেন্ট থাকে।</p>

            <hp>#Props</hp>
            <p>props হচ্ছে একটি object এটি শুধুমাত্র পড়া যায় এবং এটি এমন একটি অবজেক্ট যা ট্যাগের attribute এর ভ্যালু store করে। এটি একটি Component থেকে অন্য Component-এ ডেটা প্রেরণ করার একটি উপায়, এটি মূলত function এর argument-এর মত ডেটা পাস করে। <br></br>
                Props অপরিবর্তনীয় তাই আমরা Component-এর ভিতর থেকে Props-গুলি পরিবর্তন করতে পারি না। Component-এর ভিতরে, আমরা Props নামক বৈশিষ্ট্য যোগ করতে পারি। এই বৈশিষ্ট্যগুলি this.props হিসাবে উপাদানটিতে উপলব্ধ হয় এবং Render পদ্ধতিতে গতিশীল ডেটা Render করতে ব্যবহার করা।
            </p>
        </div>
    );
};

export default Articles;